#!/bin/bash

#########################################################
# 
# Platform: NCI Gadi HPC
# Description: Generate VCF metrics for final joint-genotyped VCF
# Author: Cali Willet
# cali.willet@sydney.edu.au
# Date last modified: 14/10/2020
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance 
# <or e.g. bioinformatics assistance of <PERSON> of Sydney Informatics
# Hub and resources and services from the National Computational 
# Infrastructure (NCI), which is supported by the Australian Government
# with access facilitated by the University of Sydney.
# 
#########################################################

#PBS -P <project>
#PBS -N bsv-R1-S24
#PBS -l walltime=00:30:00
#PBS -l ncpus=2
#PBS -l mem=64GB
#PBS -l wd
#PBS -q hugemem
#PBS -W umask=022
#PBS -o ./Logs/bsv-R1-S24-recal.o
#PBS -e ./Logs/bsv-R1-S24-recal.e 
#PBS -lstorage=<lstorage>


module load gatk/4.1.2.0

set -e

cohort=<cohort>
round=<round>
index=<index> # options: CSI or BAI. Use CSI for very large chrs. 

vcfdir=./GenotypeGVCFs/Round${round}
known_snps=./VCFs/${cohort}_bootstrap-R${round}-S5_SNP_filtered.vcf

log=./GATK_logs/vcf_metrics_recalibrated_round${round}.oe
rm -rf ${log}

mkdir -p ./VCF_metrics/Round${round}
metrics=./VCF_metrics/Round${round}/${cohort}_recalibrated_round${round}


if [[ $index =~ CSI ]]
then 
	echo BAMs are CSI indexed - VCF input is unzipped
	vcf=${vcfdir}/${cohort}.sorted.vcf		
else 
	echo BAMs are BAI indexed - VCF input is zipped
	vcf=${vcfdir}/${cohort}.sorted.vcf.gz
fi

echo "$(date) : Start GATK4 metrics generation for ${cohort} after bootstrapped BQSR round ${round} variant calling " > $log 2>&1
gatk CollectVariantCallingMetrics \
	--java-options "-Xmx58g -DGATK_STACKTRACE_ON_USER_EXCEPTION=true" \
	--DBSNP ${known_snps} \
	-I ${vcf} \
	-O ${metrics} >> ${log} 2>&1

echo "$(date) : Finished." >> $log 2>&1


if grep -q -i error $log
then 
        printf "Error in GATK log ${log}\n" 
fi 

if grep -q Exception $log
then 
        printf "Exception in GATK log ${log}\n" 
fi


